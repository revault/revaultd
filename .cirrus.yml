task:
  name: 'Functional tests'
  container:
    image: rust:latest
  timeout_in: 90m  # https://cirrus-ci.org/faq/#instance-timed-out

  env:
    EXECUTOR_WORKERS: 3
    VERBOSE: 0
    LOG_LEVEL: debug
    TIMEOUT: 300
    BITCOIND_VERSION: 23.0
    BITCOIND_DIR_NAME: "bitcoin-$BITCOIND_VERSION"
  matrix:
    - name: 'Misc functional tests'
      env:
        TEST_GROUP: tests/test_misc.py tests/test_watchtowers.py
    - name: 'RPC functional tests'
      env:
        TEST_GROUP: tests/test_rpc.py
    - name: 'Chain functional tests'
      env:
        TEST_GROUP: tests/test_rpc.py
    - name: 'Spend functional tests'
      env:
        TEST_GROUP: tests/test_spend.py

  cargo_registry_cache:
    folders: $CARGO_HOME/registry
    fingerprint_script: cat Cargo.lock
  cargo_git_cache:
    folders: $CARGO_HOME/git  # It will fail if they aren't separated
    fingerprint_script: cat Cargo.lock
  target_cache:
    folder: target
    fingerprint_script:
      - rustc --version
      - cat Cargo.lock
  revaultd_build_script: cargo build --release

  coordinator_cache:
    folder: tests/servers/coordinatord
    fingerprint_script: git rev-parse HEAD:tests/servers/coordinatord
  watchtower_cache:
    folder: tests/servers/miradord
    fingerprint_script: git rev-parse HEAD:tests/servers/miradord
  cosigning_server_cache:
    folder: tests/servers/cosignerd
    fingerprint_script: git rev-parse HEAD:tests/servers/cosignerd
  servers_build_script: |
    for server in "coordinatord" "miradord" "cosignerd"; do
      if [ ! -f tests/servers/$server/Cargo.lock ]; then
        git submodule update --init --recursive --remote ./tests/servers/$server
        cd ./tests/servers/$server
        cargo build
        cd ../../../
      fi
    done

  deps_script: apt update && apt install -y postgresql python3 python3-pip

  pip_cache:
    folder: ~/.cache/pip
  python_deps_script: pip install -r tests/requirements.txt

  test_script: |
    set -xe

    # Download the bitcoind binary
    ARCHIVE_NAME="$BITCOIND_DIR_NAME.tar.gz"
    curl https://bitcoincore.org/bin/bitcoin-core-$BITCOIND_VERSION/bitcoin-$BITCOIND_VERSION-x86_64-linux-gnu.tar.gz -o $ARCHIVE_NAME
    tar -xzf $ARCHIVE_NAME
    export BITCOIND_PATH=$BITCOIND_DIR_NAME/bin/bitcoind

    # Setup the postgres instance for the servers
    pg_ctlcluster 13 main start
    su -c "psql -c \"CREATE ROLE test CREATEDB LOGIN PASSWORD 'test'\"" - postgres
    export POSTGRES_USER=test POSTGRES_PASS=test

    # Run the functional tests
    mkdir test_dir
    TEST_DIR=$PWD/test_dir REVAULTD_PATH=$PWD/target/release/revaultd pytest $TEST_GROUP -vvv -n 2

  on_failure:
    debug_script:
      - tar -czf test_dir.tar.gz test_dir
      - tail -n100 ./test_dir/revaultd-tests-*/test_*/revaultd-*/log
      - tail -n100 ./test_dir/revaultd-tests-*/test_*/coordinatord/log
    report_artifacts:
      path: ./test_dir.tar.gz

  before_cache_script: rm -rf $CARGO_HOME/registry/index
